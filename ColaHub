task.wait()
local player = game.Players.LocalPlayer
local StarterGui = game:GetService("StarterGui")
local PolicyService = game:GetService("PolicyService")

-- –§—É–Ω–∫—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
local function Notify(title, text)
 pcall(function()
  StarterGui:SetCore("SendNotification", {
   Title = title;
   Text = text;
   Duration = 5;
  })
 end)
end

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–ª—å–∫–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞
pcall(function()
 local policyInfo = PolicyService:GetPolicyInfoForPlayerAsync(player)
 local isVerified13Plus = policyInfo.AreVerifiedAccountsAllowed or not player:GetUnder13()

 if isVerified13Plus then
  Notify("Account Check", "Authorized")
 else
  game:Shutdown()
 end
end)

task.wait()

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local Window = Rayfield:CreateWindow({
    Name = "Cola Hub",
    LoadingTitle = "Cola Hub is loading...",
    LoadingSubtitle = "by minicapyüçâ",
    ConfigurationSaving = { Enabled = true, FileName = "ColaHubConfig" },
    Theme = "Bloom"
})

local PlayerTab = Window:CreateTab("Player")
local ESPTab = Window:CreateTab("ESP")
local SettingsTab = Window:CreateTab("Settings")
local MiscTab = Window:CreateTab("Misc")

local flyEnabled = false
local flySpeed = 60
local flyConnection
local bv, bg

local walkSpeedEnabled = false
local walkSpeedValue = 16

local jumpPowerEnabled = false
local jumpPowerValue = 50

local flingEnabled = false

local function disableFly()
    if flyConnection then flyConnection:Disconnect() end
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
        LocalPlayer.Character.Humanoid.PlatformStand = false
        if bv then bv:Destroy() end
        if bg then bg:Destroy() end
    end
    flyEnabled = false
end

LocalPlayer.CharacterAdded:Connect(function(character)
    character:WaitForChild("Humanoid").Died:Connect(function()
        disableFly()
    end)
    if walkSpeedEnabled then
        character:WaitForChild("Humanoid").WalkSpeed = walkSpeedValue
    end
    if jumpPowerEnabled then
        character:WaitForChild("Humanoid").JumpPower = jumpPowerValue
    end
end)

PlayerTab:CreateToggle({
    Name = "Fly",
    CurrentValue = false,
    Callback = function(Value)
        flyEnabled = Value
        if flyEnabled then
            bv = Instance.new("BodyVelocity")
            bv.Name = "VelocityHandler"
            bv.Parent = LocalPlayer.Character.HumanoidRootPart
            bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
            bv.Velocity = Vector3.new(0, 0, 0)
            bg = Instance.new("BodyGyro")
            bg.Name = "GyroHandler"
            bg.Parent = LocalPlayer.Character.HumanoidRootPart
            bg.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
            bg.P = 1000
            bg.D = 50
            LocalPlayer.Character.Humanoid.PlatformStand = true
            flyConnection = RunService.RenderStepped:Connect(function()
                if not flyEnabled then return end
                bg.CFrame = workspace.CurrentCamera.CoordinateFrame
                local controlModule = require(LocalPlayer.PlayerScripts:WaitForChild('PlayerModule'):WaitForChild("ControlModule"))
                local direction = controlModule:GetMoveVector()
                bv.Velocity = Vector3.new()
                if direction.X ~= 0 then
                    bv.Velocity = bv.Velocity + workspace.CurrentCamera.CFrame.RightVector * (direction.X * flySpeed)
                end
                if direction.Z ~= 0 then
                    bv.Velocity = bv.Velocity - workspace.CurrentCamera.CFrame.LookVector * (direction.Z * flySpeed)
                end
            end)
        else
            disableFly()
        end
    end
})

PlayerTab:CreateSlider({
    Name = "Fly Speed",
    Range = {20, 500},
    Increment = 5,
    CurrentValue = 60,
    Callback = function(Value)
        flySpeed = Value
    end
})

PlayerTab:CreateToggle({
    Name = "WalkSpeed",
    CurrentValue = false,
    Callback = function(Value)
        walkSpeedEnabled = Value
        if LocalPlayer.Character then
            LocalPlayer.Character.Humanoid.WalkSpeed = Value and walkSpeedValue or 16
        end
    end
})

PlayerTab:CreateSlider({
    Name = "WalkSpeed Value",
    Range = {16, 100},
    Increment = 2,
    CurrentValue = 16,
    Callback = function(Value)
        walkSpeedValue = Value
        if walkSpeedEnabled and LocalPlayer.Character then
            LocalPlayer.Character.Humanoid.WalkSpeed = Value
        end
    end
})

PlayerTab:CreateToggle({
    Name = "JumpPower",
    CurrentValue = false,
    Callback = function(Value)
        jumpPowerEnabled = Value
        if LocalPlayer.Character then
            LocalPlayer.Character.Humanoid.JumpPower = Value and jumpPowerValue or 50
        end
    end
})

PlayerTab:CreateSlider({
    Name = "JumpPower Value",
    Range = {50, 200},
    Increment = 5,
    CurrentValue = 50,
    Callback = function(Value)
        jumpPowerValue = Value
        if jumpPowerEnabled and LocalPlayer.Character then
            LocalPlayer.Character.Humanoid.JumpPower = Value
        end
    end
})

PlayerTab:CreateToggle({
    Name = "Fling",
    CurrentValue = false,
    Callback = function(Value)
        flingEnabled = Value
        if flingEnabled then
            coroutine.wrap(function()
                while flingEnabled and RunService.Heartbeat:Wait() do
                    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        local hrp = LocalPlayer.Character.HumanoidRootPart
                        local vel = hrp.Velocity
                        hrp.Velocity = vel * 10000 + Vector3.new(0, 10000, 0)
                        RunService.RenderStepped:Wait()
                        hrp.Velocity = vel
                        RunService.Stepped:Wait()
                        hrp.Velocity = vel + Vector3.new(0, 0.1, 0)
                    end
                end
            end)()
        end
    end
})

local noclipEnabled = false
local noclipConnection

local function enableNoclip()
    if LocalPlayer.Character then
        for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") and part.CanCollide then
                part.CanCollide = false
            end
        end
    end
end

local function disableNoclip()
    if LocalPlayer.Character then
        for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

PlayerTab:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Callback = function(Value)
        noclipEnabled = Value
        if noclipEnabled then
            enableNoclip()
            noclipConnection = RunService.Stepped:Connect(function()
                if noclipEnabled and LocalPlayer.Character then
                    for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                        if part:IsA("BasePart") and part.CanCollide then
                            part.CanCollide = false
                        end
                    end
                end
            end)
        else
            if noclipConnection then
                noclipConnection:Disconnect()
            end
            disableNoclip()
        end
    end
})

local espEnabled = false
local tracersEnabled = false
local pinkColor = Color3.fromRGB(255, 182, 193)
local espCache = {}
local tracersCache = {}
local tracersUpdateConnection

local function createESP(character)
    if not character or not character:FindFirstChild("HumanoidRootPart") or espCache[character] then return end
    local highlight = Instance.new("Highlight")
    highlight.Name = "ColaESP"
    highlight.FillColor = pinkColor
    highlight.OutlineColor = pinkColor
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0
    highlight.Parent = character
    espCache[character] = highlight
end

local function removeESP(character)
    if espCache[character] then
        espCache[character]:Destroy()
        espCache[character] = nil
    end
end

local function createTracer(character)
    if not character or not character:FindFirstChild("HumanoidRootPart") or tracersCache[character] then return end
    local line = Drawing.new("Line")
    line.Visible = false
    line.Color = pinkColor
    line.Thickness = 2
    line.Transparency = 0.7
    tracersCache[character] = line
end

local function removeTracer(character)
    if tracersCache[character] then
        tracersCache[character]:Remove()
        tracersCache[character] = nil
    end
end

local function updateTracers()
    local camera = workspace.CurrentCamera
    local screenCenterBottom = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y)
    for character, line in pairs(tracersCache) do
        if not character or not character.Parent then
            removeTracer(character)
        else
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                local screenPoint, onScreen = camera:WorldToViewportPoint(rootPart.Position)
                if onScreen then
                    line.Visible = true
                    line.From = screenCenterBottom
                    line.To = Vector2.new(screenPoint.X, screenPoint.Y)
                else
                    line.Visible = false
                end
            else
                line.Visible = false
            end
        end
    end
end

local function updatePlayers()
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer and p.Character then
            if espEnabled then
                createESP(p.Character)
            else
                removeESP(p.Character)
            end
            if tracersEnabled then
                createTracer(p.Character)
            else
                removeTracer(p.Character)
            end
        end
    end
end

coroutine.wrap(function()
    while true do
        updatePlayers()
        task.wait(1)
    end
end)()

ESPTab:CreateToggle({
    Name = "ESP",
    CurrentValue = false,
    Callback = function(Value)
        espEnabled = Value
        updatePlayers()
    end
})

ESPTab:CreateToggle({
    Name = "Tracers",
    CurrentValue = false,
    Callback = function(Value)
        tracersEnabled = Value
        updatePlayers()
        if tracersEnabled then
            if not tracersUpdateConnection then
                tracersUpdateConnection = RunService.RenderStepped:Connect(updateTracers)
            end
        else
            if tracersUpdateConnection then
                tracersUpdateConnection:Disconnect()
                tracersUpdateConnection = nil
            end
        end
    end
})

SettingsTab:CreateDropdown({
    Name = "Theme",
    Options = {
        "Default", "AmberGlow", "Amethyst",
        "Bloom", "DarkBlue", "Green",
        "Light", "Ocean", "Serenity"
    },
    CurrentOption = {"Bloom"},
    MultipleOptions = false,
    Callback = function(Options)
        Window.ModifyTheme(Options[1])
        Window:SaveConfiguration()
    end
})

SettingsTab:CreateButton({
    Name = "Save Configuration",
    Callback = function()
        Window:SaveConfiguration()
    end
})

MiscTab:CreateButton({
    Name = "FPS Unlocker",
    Callback = function()
        setfpscap(999)
        Rayfield:Notify({
            Title = "FPS Unlocked",
            Content = "FPS limit removed",
            Duration = 3
        })
    end
})

MiscTab:CreateToggle({
    Name = "Anti AFK",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            local vu = game:GetService("VirtualUser")
            game:GetService("Players").LocalPlayer.Idled:connect(function()
                vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
                task.wait(1)
                vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
            end)
        end
    end
})

Rayfield:Notify({
    Title = "Cola Hub",
    Content = "Cola Hub Loaded",
    Duration = 3
})
